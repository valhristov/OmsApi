{
  "swagger": "2.0",
  "info": {
    "description": "All the requests that the server will respond to.",
    "version": "2.0",
    "title": "Order Management Station API"
  },
  "host": "suzcloud.stage.ismet.kz",
  "basePath": "/",
  "tags": [
    {
      "name": "API.v2.ALCOHOL",
      "description": "Order Management Station API v.2 for ALCOHOL group"
    },
    {
      "name": "API.v2.LP",
      "description": "Order Management Station API v.2 for LP group"
    },
    {
      "name": "API.v2.MILK",
      "description": "Order Management Station API v.2 for MILK group"
    },
    {
      "name": "API.v2.PHARMA",
      "description": "Order Management Station API v.2 for PHARMA group"
    },
    {
      "name": "API.v2.SHOES",
      "description": "Order Management Station API v.2 for SHOES group"
    },
    {
      "name": "API.v2.TOBACCO",
      "description": "Order Management Station API v.2 for TOBBACO group"
    },
    {
      "name": "API.v2.WATER",
      "description": "Order Management Station API v.2 for WATER group"
    }
  ],
  "paths": {
    "/api/v2/alcohol/aggregation": {
      "post": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Identification Code Aggregation Report (\u041E\u0442\u0447\u0435\u0442 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendAggregationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aggregationReportDto",
            "description": "Aggregation Data (\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationReportDtoAlcoholKZ"
            }
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/aggregation/info": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Get aggregation info (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "getAggregationInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Autorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "unitSerialNumber",
            "in": "query",
            "description": "Aggregation unit number (\u041A\u041C \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/AggregationInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Aggregation unit not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0410\u0433\u0440\u0435\u0433\u0430\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/buffer/close": {
      "post": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/buffer/status": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/codes": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/codes/retry": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/logs/upload": {
      "post": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/orders": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Autorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoAlcohol",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoAlcoholKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/ping": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/receipts": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/report/info": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/utilisation": {
      "post": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Identification Code Utilisation Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0443\u0442\u0438\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendUtilisationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          },
          {
            "in": "body",
            "name": "utilisationReportDto",
            "description": "List of the utilized Identification Codes (\u041D\u0430\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UtilisationReportDtoAlcoholKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/alcohol/version": {
      "get": {
        "tags": [
          "API.v2.ALCOHOL"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/buffer/close": {
      "post": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/buffer/status": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/codes": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/codes/retry": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/logs/upload": {
      "post": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/orders": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Autorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoLp",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoLightKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/ping": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/receipts": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/report/info": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/lp/version": {
      "get": {
        "tags": [
          "API.v2.LP"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/aggregation": {
      "post": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Identification Code Aggregation Report (\u041E\u0442\u0447\u0435\u0442 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendAggregationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aggregationReportDto",
            "description": "Aggregation Data (\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationReportDtoMilkKZ"
            }
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/aggregation/info": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Get aggregation info (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "getAggregationInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "unitSerialNumber",
            "in": "query",
            "description": "Aggregation unit number (\u041A\u041C \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/AggregationInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Aggregation unit not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0410\u0433\u0440\u0435\u0433\u0430\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/buffer/close": {
      "post": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/buffer/status": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/codes": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/codes/retry": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/dropout": {
      "post": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Identification Code Dropout Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435 \u041A\u041C)",
        "operationId": "sendDropoutReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dropoutReportDto",
            "description": "Identification code dropout report (\u041E\u0442\u0447\u0435\u0442 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropoutReportDtoMilkKZ"
            }
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435 \u0432 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/logs/upload": {
      "post": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/orders": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoMilk",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoMilkKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/ping": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/receipts": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/report/info": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/utilisation": {
      "post": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Identification Code Utilisation Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0443\u0442\u0438\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendUtilisationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          },
          {
            "in": "body",
            "name": "utilisationReportDto",
            "description": "List of the utilized Identification Codes (\u041D\u0430\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UtilisationReportDtoMilkKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/milk/version": {
      "get": {
        "tags": [
          "API.v2.MILK"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/aggregation": {
      "post": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Identification Code Aggregation Report (\u041E\u0442\u0447\u0435\u0442 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendAggregationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aggregationReportDto",
            "description": "Aggregation Data (\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationReportDtoPharmaKZ"
            }
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/aggregation/info": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Get aggregation info (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "getAggregationInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Autorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "unitSerialNumber",
            "in": "query",
            "description": "Aggregation unit number (\u041A\u041C \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/AggregationInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Aggregation unit not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0410\u0433\u0440\u0435\u0433\u0430\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/buffer/close": {
      "post": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/buffer/status": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/codes": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/codes/retry": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/dropout": {
      "post": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Identification Code Dropout Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435 \u041A\u041C)",
        "operationId": "sendDropoutReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dropoutReportDto",
            "description": "Identification code dropout report (\u041E\u0442\u0447\u0435\u0442 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropoutReportDtoPharmaKZ"
            }
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435 \u0432 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/logs/upload": {
      "post": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/orders": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoPharma",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoPharmaKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/ping": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/receipts": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/report/info": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/utilisation": {
      "post": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Identification Code Utilisation Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0443\u0442\u0438\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendUtilisationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          },
          {
            "in": "body",
            "name": "utilisationReportDto",
            "description": "List of the utilized Identification Codes (\u041D\u0430\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UtilisationReportDtoPharmaKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/pharma/version": {
      "get": {
        "tags": [
          "API.v2.PHARMA"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/aggregation": {
      "post": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Identification Code Aggregation Report (\u041E\u0442\u0447\u0435\u0442 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendAggregationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aggregationReportDto",
            "description": "Aggregation Data (\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationReportDtoShoesKZ"
            }
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/aggregation/info": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Get aggregation info (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "getAggregationInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "unitSerialNumber",
            "in": "query",
            "description": "Aggregation unit number (\u041A\u041C \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/AggregationInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Aggregation unit not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0410\u0433\u0440\u0435\u0433\u0430\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/buffer/close": {
      "post": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/buffer/status": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/codes": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/codes/retry": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/logs/upload": {
      "post": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/orders": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoShoes",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoShoesKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/ping": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/receipts": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/report/info": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/shoes/version": {
      "get": {
        "tags": [
          "API.v2.SHOES"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/aggregation": {
      "post": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Identification Code Aggregation Report (\u041E\u0442\u0447\u0435\u0442 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendAggregationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "aggregationReportDto",
            "description": "Aggregation Data (\u0421\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationReportDtoTobaccoKZ"
            }
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/aggregation/info": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Get aggregation info (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E\u0431 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "getAggregationInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "unitSerialNumber",
            "in": "query",
            "description": "Aggregation unit number (\u041A\u041C \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/AggregationInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Aggregation unit not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0410\u0433\u0440\u0435\u0433\u0430\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/buffer/close": {
      "post": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/buffer/status": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/codes": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/codes/retry": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/dropout": {
      "post": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Identification Code Dropout Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435 \u041A\u041C)",
        "operationId": "sendDropoutReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "dropoutReportDto",
            "description": "Identification code dropout report (\u041E\u0442\u0447\u0435\u0442 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DropoutReportDtoTobaccoKZ"
            }
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E \u0432\u044B\u0431\u044B\u0442\u0438\u0438/\u043E\u0442\u0431\u0440\u0430\u043A\u043E\u0432\u043A\u0435 \u0432 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/logs/upload": {
      "post": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/orders": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoTobacco",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoTobaccoKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/ping": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/receipts": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/report/info": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/utilisation": {
      "post": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Identification Code Utilisation Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0443\u0442\u0438\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendUtilisationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          },
          {
            "in": "body",
            "name": "utilisationReportDto",
            "description": "List of the utilized Identification Codes (\u041D\u0430\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UtilisationReportDtoTobaccoKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/tobacco/version": {
      "get": {
        "tags": [
          "API.v2.TOBACCO"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/buffer/close": {
      "post": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "\u0417\u0430\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0437\u0430\u043A\u0430\u0437/\u0437\u0430\u043A\u0430\u0437 (Close suborder/order)",
        "operationId": "closeBufferUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044F \u043F\u0440\u0435\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0432\u044B\u0434\u0430\u0447\u0443 \u041A\u041C)",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/buffer/status": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Get buffers status for a specific product GTIN (\u0421\u0442\u0430\u0442\u0443\u0441 ,\u0431\u0443\u0444\u0435\u0440\u0430 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043F\u043E \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u043C\u0443 GTIN)",
        "operationId": "getBufferStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u043D\u0443\u0436\u043D\u043E \u043F\u043E\u043B\u0443\u0447\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043A\u0430\u0437\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Order Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BufferInfo"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/codes": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Get identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "lastBlockId",
            "in": "query",
            "description": "Identifier of last sent code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0433\u043E \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u043E\u0433\u043E \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": false,
            "type": "string",
            "default": "0",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Required identification code quantity (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043C\u044B\u0445 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/codes/blocks": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Get identification blocks code for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getBlocksUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Block Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0445 \u0431\u043B\u043E\u043A\u043E\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/BlocksDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/codes/retry": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Get retry identification codes for a specific product GTIN (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u0432\u0442\u043E\u0440\u043D\u043E \u041A\u041C \u0434\u043B\u044F \u0437\u0430\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u0432\u0430\u0440\u0430)",
        "operationId": "getRetryCodesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "blockId",
            "in": "query",
            "description": "Identifier code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "gtin",
            "in": "query",
            "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430, \u043F\u043E \u043A\u043E\u0442\u043E\u0440\u043E\u043C\u0443 \u0437\u0430\u043F\u0440\u0430\u0448\u0438\u0432\u0430\u044E\u0442\u0441\u044F \u043A\u043E\u0434\u044B)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Identification Code Array (\u041C\u0430\u0441\u0441\u0438\u0432 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/CodesDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Buffer not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0411\u0443\u0444\u0435\u0440 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/logs/upload": {
      "post": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Send Automated process control system logs files (\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u043B\u043E\u0433 \u0444\u0430\u0439\u043B\u044B \u0410\u0421\u0423\u0422\u041F)",
        "operationId": "uploadLogsUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "log",
            "in": "formData",
            "description": "Log file (\u0424\u0430\u0439\u043B \u0441 \u043B\u043E\u0433\u0430\u043C\u0438)",
            "required": true,
            "type": "file"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/orders": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Status of orders (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432)",
        "operationId": "getOrdersUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "\u041C\u0430\u0441\u0441\u0438\u0432 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0445 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438",
            "schema": {
              "$ref": "#/definitions/OrdersSummaries"
            }
          },
          "400": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Create Order (\u0421\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
        "operationId": "createOrderUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Autorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "in": "body",
            "name": "orderDtoWater",
            "description": "Order Description (\u0411\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDtoWaterKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/OrderResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/ping": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "PING OMS (\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u043F\u0440\u043E\u0432\u0435\u0440\u043A\u0438 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\u0441\u0442\u0438 \u0421\u0423\u0417)",
            "schema": {
              "$ref": "#/definitions/OMSIdentifier"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/receipts": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u043A\u0432\u0438\u0442\u0430\u043D\u0446\u0438\u0439 \u043F\u043E \u0443\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430",
        "operationId": "getReceiptsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "docId",
            "in": "query",
            "description": "docId",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request result (\u0420\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
            "schema": {
              "$ref": "#/definitions/ReceiptsDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/report/info": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Get report status information by unique report ID (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u043E\u0442\u0447\u0435\u0442\u0430 \u043F\u043E \u0435\u0433\u043E \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u0443)",
        "operationId": "getReportInfoUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "reportId",
            "in": "query",
            "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438)",
            "schema": {
              "$ref": "#/definitions/ReportStatusDto"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "404": {
            "description": "Request failed. Report not found. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041E\u0442\u0447\u0435\u0442 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/utilisation": {
      "post": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Identification Code Utilisation Report (\u041F\u0435\u0440\u0435\u0434\u0430\u0447\u0430 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u0443\u0442\u0438\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u041A\u041C)",
        "operationId": "sendUtilisationReportUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientToken",
            "in": "header",
            "description": "Authorization token (\u0422\u043E\u043A\u0435\u043D \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438)",
            "required": true,
            "type": "string"
          },
          {
            "name": "omsId",
            "in": "query",
            "description": "OMS Id (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417)",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "userName",
            "in": "header",
            "description": "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F",
            "required": false,
            "type": "string",
            "default": "API"
          },
          {
            "in": "body",
            "name": "utilisationReportDto",
            "description": "List of the utilized Identification Codes (\u041D\u0430\u043D\u0435\u0441\u0435\u043D\u043D\u044B\u0435 \u041A\u041C)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UtilisationReportDtoWaterKZ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unique OMS Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u043E\u0431 \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u041A\u041C)",
            "schema": {
              "$ref": "#/definitions/ReportResult"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api/v2/water/version": {
      "get": {
        "tags": [
          "API.v2.WATER"
        ],
        "summary": "Request OMS and OMS API versions (\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
        "operationId": "versionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Request result (\u041D\u043E\u043C\u0435\u0440\u0430 \u0432\u0435\u0440\u0441\u0438\u0439 \u0421\u0423\u0417 \u0438 \u0421\u0423\u0417 API)",
            "schema": {
              "$ref": "#/definitions/AppVersion"
            }
          },
          "400": {
            "description": "Request failed. Incorrect parameters. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          },
          "500": {
            "description": "Request failed. Internal Server Error. (\u041E\u043F\u0435\u0440\u0430\u0446\u0438\u044F \u043D\u0435 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0430. \u0412\u043D\u0443\u0442\u0440\u0435\u043D\u043D\u044F\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430)",
            "schema": {
              "$ref": "#/definitions/RestResult"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AggregationInfo": {
      "type": "object",
      "required": [
        "aggregationUnit",
        "omsId"
      ],
      "properties": {
        "aggregationUnit": {
          "description": "Aggregation unit (\u0415\u0434\u0438\u043D\u0438\u0446\u0430 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "$ref": "#/definitions/AggregationUnit"
        },
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "participantId": {
          "type": "string",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        },
        "productsInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductInfo"
          }
        }
      },
      "title": "AggregationInfo"
    },
    "AggregationReportDtoAlcoholKZ": {
      "type": "object",
      "required": [
        "aggregationUnits",
        "participantId"
      ],
      "properties": {
        "aggregationUnits": {
          "type": "array",
          "description": "Array of aggregation unit (\u041C\u0430\u0441\u0441\u0438\u0432 \u0435\u0434\u0438\u043D\u0438\u0446 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "items": {
            "$ref": "#/definitions/AggregationUnit"
          }
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        }
      },
      "title": "AggregationReportDtoAlcoholKZ"
    },
    "AggregationReportDtoMilkKZ": {
      "type": "object",
      "required": [
        "aggregationUnits",
        "participantId"
      ],
      "properties": {
        "aggregationUnits": {
          "type": "array",
          "description": "Array of aggregation unit (\u041C\u0430\u0441\u0441\u0438\u0432 \u0435\u0434\u0438\u043D\u0438\u0446 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "items": {
            "$ref": "#/definitions/AggregationUnit"
          }
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        }
      },
      "title": "AggregationReportDtoMilkKZ"
    },
    "AggregationReportDtoPharmaKZ": {
      "type": "object",
      "required": [
        "aggregationUnits",
        "participantId",
        "productionLineId"
      ],
      "properties": {
        "aggregationUnits": {
          "type": "array",
          "description": "Array of aggregation unit (\u041C\u0430\u0441\u0441\u0438\u0432 \u0435\u0434\u0438\u043D\u0438\u0446 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "items": {
            "$ref": "#/definitions/AggregationUnit"
          }
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        },
        "productionLineId": {
          "type": "string",
          "example": "455",
          "description": "Production line number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": 123,
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        }
      },
      "title": "AggregationReportDtoPharmaKZ"
    },
    "AggregationReportDtoShoesKZ": {
      "type": "object",
      "required": [
        "aggregationUnits",
        "participantId"
      ],
      "properties": {
        "aggregationUnits": {
          "type": "array",
          "description": "Array of aggregation unit (\u041C\u0430\u0441\u0441\u0438\u0432 \u0435\u0434\u0438\u043D\u0438\u0446 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "items": {
            "$ref": "#/definitions/AggregationUnit"
          }
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        }
      },
      "title": "AggregationReportDtoShoesKZ"
    },
    "AggregationReportDtoTobaccoKZ": {
      "type": "object",
      "required": [
        "aggregationUnits",
        "participantId",
        "productionLineId"
      ],
      "properties": {
        "aggregationUnits": {
          "type": "array",
          "description": "Array of aggregation unit (\u041C\u0430\u0441\u0441\u0438\u0432 \u0435\u0434\u0438\u043D\u0438\u0446 \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "items": {
            "$ref": "#/definitions/AggregationUnit"
          }
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        },
        "productionLineId": {
          "type": "string",
          "example": "455",
          "description": "Production line number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        }
      },
      "title": "AggregationReportDtoTobaccoKZ"
    },
    "AggregationUnit": {
      "type": "object",
      "required": [
        "aggregatedItemsCount",
        "aggregationType",
        "aggregationUnitCapacity",
        "sntins",
        "unitSerialNumber"
      ],
      "properties": {
        "aggregatedItemsCount": {
          "type": "integer",
          "format": "int32",
          "example": 48,
          "description": "Number of goods actually aggregated in the unit (\u0424\u0430\u043A\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u0443\u043F\u0430\u043A\u043E\u0432\u0430\u043D\u043E)"
        },
        "aggregationType": {
          "type": "string",
          "example": "AGGREGATION",
          "description": "Aggregation operation type (\u0422\u0438\u043F \u0430\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u0438)",
          "enum": [
            "AGGREGATION",
            "UPDATE"
          ]
        },
        "aggregationUnitCapacity": {
          "type": "integer",
          "format": "int32",
          "example": 50,
          "description": "Aggregation Unit Capacity (\u0415\u043C\u043A\u043E\u0441\u0442\u044C \u0443\u043F\u0430\u043A\u043E\u0432\u043A\u0438)"
        },
        "sntins": {
          "type": "array",
          "example": [],
          "description": "List of the Aggregated Identification Codes (\u0421\u043F\u0438\u0441\u043E\u043A \u0430\u0433\u0440\u0435\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "unitSerialNumber": {
          "type": "string",
          "example": "1jdu7-kksb67-qwtg66",
          "description": "Identification Code of Aggregation Unit (\u041A\u041C \u0430\u0433\u0440\u0435\u0433\u0430\u0442\u0430)"
        }
      },
      "title": "AggregationUnit"
    },
    "AppVersion": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "example": "2.0.0.54",
          "description": "OMS API Version (\u0412\u0435\u0440\u0441\u0438\u044F API \u0421\u0423\u0417)"
        },
        "omsVersion": {
          "type": "string",
          "example": "3.1.8.0",
          "description": "OMS Version (\u0412\u0435\u0440\u0441\u0438\u044F \u0421\u0423\u0417)"
        }
      },
      "title": "AppVersion"
    },
    "BlockDto": {
      "type": "object",
      "properties": {
        "blockDateTime": {
          "type": "integer",
          "format": "int64",
          "example": 1574780400,
          "description": "Date, time of creation of the marking code package(\u0414\u0430\u0442\u0430, \u0432\u0440\u0435\u043C\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u043F\u0430\u043A\u0435\u0442\u0430 \u043A\u043E\u0434\u043E\u0432 \u043C\u0430\u0440\u043A\u0438\u0440\u043E\u0432\u043A\u0438)"
        },
        "blockId": {
          "type": "string",
          "example": "05f52b01-ba4b-4dc7-a94a-7846db44ac63",
          "description": "Unique identifier of a business order for issuing MC (\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C/\u0421\u0418"
        }
      },
      "title": "BlockDto"
    },
    "BlocksDto": {
      "type": "object",
      "required": [
        "gtin",
        "omsId"
      ],
      "properties": {
        "blocks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlockDto"
          }
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "orderId": {
          "type": "string",
          "example": "05f52b01-ba4b-4dc7-a94a-7846db44ac63",
          "description": "Unique identifier of a business order for issuing MC (\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)"
        }
      },
      "title": "BlocksDto"
    },
    "BufferInfo": {
      "type": "object",
      "required": [
        "availableCodes",
        "bufferStatus",
        "gtin",
        "leftInBuffer",
        "omsId",
        "orderId",
        "poolsExhausted",
        "totalCodes",
        "totalPassed",
        "unavailableCodes"
      ],
      "properties": {
        "availableCodes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of available codes in buffer and pools (\u041E\u0431\u0449\u0435\u0435 \u043A\u043E\u043B-\u0432\u043E \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u041A\u041C \u0434\u043B\u044F \u0442\u043E\u0432\u0430\u0440\u0430 \u0432 \u0431\u0443\u0444\u0435\u0440\u0435 \u0438 \u043F\u0443\u043B\u0430\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440\u0430)"
        },
        "bufferStatus": {
          "type": "string",
          "description": "Buffer status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0443\u0444\u0435\u0440\u0430)",
          "enum": [
            "PENDING",
            "ACTIVE",
            "EXHAUSTED",
            "REJECTED",
            "EXPIRED",
            "CLOSED"
          ]
        },
        "expiredDate": {
          "type": "integer",
          "format": "int64",
          "example": 1596792681987,
          "description": "Codes expired date in millis since epoch (\u0414\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0438\u044F \u0441\u0440\u043E\u043A\u0430 \u0433\u043E\u0434\u043D\u043E\u0441\u0442\u0438 \u041A\u041C \u0432 Unix time. \u0420\u0430\u0432\u043D\u0430 \u043D\u0443\u043B\u044E \u0435\u0441\u043B\u0438 \u0441\u0440\u043E\u043A \u0433\u043E\u0434\u043D\u043E\u0441\u0442\u0438 \u043D\u0435 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D.)"
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "leftInBuffer": {
          "type": "integer",
          "format": "int32",
          "description": "Number of unused ICs in the array (\u041E\u0441\u0442\u0430\u0442\u043E\u043A \u041A\u041C \u0432 \u0431\u0443\u0444\u0435\u0440\u0435 \u0421\u0423\u0417)"
        },
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "orderId": {
          "type": "string",
          "example": "05f52b01-ba4b-4dc7-a94a-7846db44ac63",
          "description": "A unique order ID in OMS (\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)"
        },
        "poolInfos": {
          "type": "array",
          "description": "Array of pools created for the IC buffer (\u041C\u0430\u0441\u0441\u0438\u0432 \u043F\u0443\u043B\u043E\u0432, \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u0431\u0443\u0444\u0435\u0440\u0430)",
          "items": {
            "$ref": "#/definitions/PoolInfo"
          }
        },
        "poolsExhausted": {
          "type": "boolean",
          "description": "ER pools was exhausted (\u0417\u0430\u043A\u043E\u043D\u0447\u0438\u043B\u0438\u0441\u044C \u041A\u041C \u0432 \u043F\u0443\u043B\u0430\u0445 \u0420\u042D)"
        },
        "rejectionReason": {
          "type": "string",
          "description": "Buffer rejection reason (\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u0438\u044F \u0431\u0443\u0444\u0435\u0440\u0430 \u0421\u0423\u0417-\u043E\u043C)"
        },
        "totalCodes": {
          "type": "integer",
          "format": "int32",
          "description": "Order quantity of IC in the order (\u041E\u0431\u0449\u0435\u0435 \u043A\u043E\u043B-\u0432\u043E \u0437\u0430\u043A\u0430\u0437\u0430\u043D\u043D\u044B\u0445 \u041A\u041C \u0434\u043B\u044F \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "totalPassed": {
          "type": "integer",
          "format": "int32",
          "description": "Buffer total passed codes (\u0421\u0443\u043C\u043C\u0430\u0440\u043D\u043E\u0435 \u043A\u043E\u043B-\u0432\u043E \u041A\u041C \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0445 \u0438\u0437 \u0431\u0443\u0444\u0435\u0440\u0430)"
        },
        "unavailableCodes": {
          "type": "integer",
          "format": "int32",
          "description": "Number of unavailable codes (\u041E\u0431\u0449\u0435\u0435 \u043A\u043E\u043B-\u0432\u043E \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0445 \u041A\u041C \u0434\u043B\u044F \u0442\u043E\u0432\u0430\u0440\u0430 \u0432 \u0441\u0432\u044F\u0437\u0438 \u0441 \u0442\u0435\u0445\u043D\u0438\u0447\u0435\u0441\u043A\u0438\u043C\u0438 \u043F\u0440\u0438\u0447\u0438\u043D\u0430\u043C\u0438)"
        }
      },
      "title": "BufferInfo"
    },
    "CodesDto": {
      "type": "object",
      "required": [
        "omsId"
      ],
      "properties": {
        "blockId": {
          "type": "string",
          "example": "76795854-5024-404e-9275-959ac89ccb57",
          "description": "Identifier of code block (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u043B\u043E\u043A\u0430 \u043A\u043E\u0434\u043E\u0432)"
        },
        "codes": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "Identification Codes (\u0421\u043F\u0438\u0441\u043E\u043A \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        }
      },
      "title": "CodesDto"
    },
    "DropoutReportDtoMilkKZ": {
      "type": "object",
      "required": [
        "dropoutReason",
        "participantId",
        "sntins",
        "withChild"
      ],
      "properties": {
        "dropoutReason": {
          "type": "string",
          "example": "DEFECT",
          "description": "Dropout reason (\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u0432\u044B\u0431\u044B\u0442\u0438\u044F)",
          "enum": [
            "DEFECT",
            "EXPIRY",
            "QA_SAMPLES",
            "PRODUCT_RECALL",
            "COMPLAINTS",
            "PRODUCT_TESTING",
            "DEMO_SAMPLES",
            "DAMAGE_LOSS",
            "DESTRUCTION",
            "LIQUIDATION",
            "CONFISCATION",
            "OTHER"
          ]
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        },
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "Identification Codes that were dropped out (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0432\u044B\u0431\u044B\u0432\u0448\u0438\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "sourceDocDate": {
          "type": "string",
          "example": "2019-05-01",
          "description": "Dropout document date (\u0414\u0430\u0442\u0430 \u043F\u0435\u0440\u0432\u0438\u0447\u043D\u043E\u0433\u043E \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430)"
        },
        "sourceDocNum": {
          "type": "string",
          "example": "235431",
          "description": "Dropout document number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0435\u0440\u0432\u0438\u0447\u043D\u043E\u0433\u043E \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430)"
        },
        "withChild": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether to write off all nested items (\u041F\u0440\u0438\u0437\u043D\u0430\u043A \u0441\u043F\u0438\u0441\u0430\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u0432\u043B\u043E\u0436\u0435\u043D\u043D\u044B\u0445 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432)"
        }
      },
      "title": "DropoutReportDtoMilkKZ"
    },
    "DropoutReportDtoPharmaKZ": {
      "type": "object",
      "required": [
        "address",
        "dropoutReason",
        "participantId",
        "sntins",
        "withChild"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "\u0433. \u041C\u043E\u0441\u043A\u0432\u0430 \u0443\u043B \u041C\u0438\u0440\u0430 20",
          "description": "Address where the write-off was made (\u0410\u0434\u0440\u0435\u0441, \u0433\u0434\u0435 \u0431\u044B\u043B\u043E \u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0434\u0435\u043D\u043E \u0441\u043F\u0438\u0441\u0430\u043D\u0438\u0435)"
        },
        "dropoutReason": {
          "type": "string",
          "example": "DEFECT",
          "description": "Dropout reason (\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u0432\u044B\u0431\u044B\u0442\u0438\u044F)",
          "enum": [
            "DEFECT",
            "EXPIRY",
            "QA_SAMPLES",
            "PRODUCT_RECALL",
            "COMPLAINTS",
            "PRODUCT_TESTING",
            "DEMO_SAMPLES",
            "DAMAGE_LOSS",
            "DESTRUCTION",
            "LIQUIDATION",
            "CONFISCATION",
            "OTHER"
          ]
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        },
        "productionLineId": {
          "type": "string",
          "example": "455",
          "description": "Production Line Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "Identification Codes that were dropped out (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0432\u044B\u0431\u044B\u0432\u0448\u0438\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "sourceDocDate": {
          "type": "string",
          "example": "2019-05-01",
          "description": "Dropout document date (\u0414\u0430\u0442\u0430 \u043F\u0435\u0440\u0432\u0438\u0447\u043D\u043E\u0433\u043E \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430)"
        },
        "sourceDocNum": {
          "type": "string",
          "example": "235431",
          "description": "Dropout document number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0435\u0440\u0432\u0438\u0447\u043D\u043E\u0433\u043E \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430)"
        },
        "withChild": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether to write off all nested items (\u041F\u0440\u0438\u0437\u043D\u0430\u043A \u0441\u043F\u0438\u0441\u0430\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u0432\u043B\u043E\u0436\u0435\u043D\u043D\u044B\u0445 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432)"
        }
      },
      "title": "DropoutReportDtoPharmaKZ"
    },
    "DropoutReportDtoTobaccoKZ": {
      "type": "object",
      "required": [
        "address",
        "dropoutReason",
        "participantId",
        "sntins",
        "withChild"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "\u0433. \u041C\u043E\u0441\u043A\u0432\u0430 \u0443\u043B \u041C\u0438\u0440\u0430 20",
          "description": "Address where the write-off was made (\u0410\u0434\u0440\u0435\u0441, \u0433\u0434\u0435 \u0431\u044B\u043B\u043E \u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0434\u0435\u043D\u043E \u0441\u043F\u0438\u0441\u0430\u043D\u0438\u0435)"
        },
        "dropoutReason": {
          "type": "string",
          "example": "DEFECT",
          "description": "Dropout reason (\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u0432\u044B\u0431\u044B\u0442\u0438\u044F)",
          "enum": [
            "DEFECT",
            "EXPIRY",
            "QA_SAMPLES",
            "PRODUCT_RECALL",
            "COMPLAINTS",
            "PRODUCT_TESTING",
            "DEMO_SAMPLES",
            "DAMAGE_LOSS",
            "DESTRUCTION",
            "LIQUIDATION",
            "CONFISCATION",
            "OTHER"
          ]
        },
        "participantId": {
          "type": "string",
          "example": "3543033591",
          "description": "Taxpayer Identification Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u043E\u043D\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043D\u0430\u043B\u043E\u0433\u043E\u043F\u043B\u0430\u0442\u0435\u043B\u044C\u0449\u0438\u043A\u0430)"
        },
        "productionLineId": {
          "type": "string",
          "example": "455",
          "description": "Production Line Number (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "Identification Codes that were dropped out (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0432\u044B\u0431\u044B\u0432\u0448\u0438\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "sourceDocDate": {
          "type": "string",
          "example": "2019-05-01",
          "description": "Dropout document date (\u0414\u0430\u0442\u0430 \u043F\u0435\u0440\u0432\u0438\u0447\u043D\u043E\u0433\u043E \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430)"
        },
        "sourceDocNum": {
          "type": "string",
          "example": "235431",
          "description": "Dropout document number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0435\u0440\u0432\u0438\u0447\u043D\u043E\u0433\u043E \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430)"
        },
        "withChild": {
          "type": "boolean",
          "example": true,
          "description": "Specifies whether to write off all nested items (\u041F\u0440\u0438\u0437\u043D\u0430\u043A \u0441\u043F\u0438\u0441\u0430\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u0432\u043B\u043E\u0436\u0435\u043D\u043D\u044B\u0445 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432)"
        }
      },
      "title": "DropoutReportDtoTobaccoKZ"
    },
    "OMSIdentifier": {
      "type": "object",
      "required": [
        "omsId"
      ],
      "properties": {
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        }
      },
      "title": "OMSIdentifier"
    },
    "OrderDtoAlcoholKZ": {
      "type": "object",
      "required": [
        "contactPerson",
        "createMethodType",
        "products",
        "releaseMethodType"
      ],
      "properties": {
        "contactPerson": {
          "type": "string",
          "example": "John Smith (\u0418\u0432\u0430\u043D\u043E\u0432 \u041F\u0435\u0442\u0440 \u0421\u0438\u0434\u043E\u0440\u043E\u0432\u0438\u0447)",
          "description": "Contact Person (\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u043E\u0435 \u043B\u0438\u0446\u043E)"
        },
        "country": {
          "type": "string",
          "example": "KZ",
          "description": "Country of Origin (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)",
          "enum": [
            "AU",
            "AT",
            "AZ",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AI",
            "AO",
            "AD",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AF",
            "BS",
            "BD",
            "BB",
            "BH",
            "BY",
            "BZ",
            "BE",
            "BJ",
            "BM",
            "BG",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "IO",
            "BN",
            "BV",
            "BF",
            "BI",
            "BT",
            "VU",
            "GB",
            "HU",
            "VE",
            "VG",
            "VI",
            "VN",
            "GA",
            "HT",
            "GY",
            "GM",
            "GH",
            "GP",
            "GT",
            "GN",
            "GW",
            "DE",
            "GG",
            "GI",
            "HN",
            "HK",
            "GD",
            "GL",
            "GR",
            "GE",
            "GU",
            "DK",
            "CD",
            "JE",
            "DJ",
            "DM",
            "DO",
            "EU",
            "EG",
            "ZM",
            "EH",
            "ZW",
            "IL",
            "IN",
            "ID",
            "JO",
            "IQ",
            "IR",
            "IE",
            "IS",
            "ES",
            "IT",
            "YE",
            "CV",
            "KZ",
            "KH",
            "CM",
            "CA",
            "QA",
            "KE",
            "CY",
            "KI",
            "CN",
            "CC",
            "CO",
            "KM",
            "CG",
            "KP",
            "CR",
            "CI",
            "CU",
            "KW",
            "KG",
            "CW",
            "LA",
            "LS",
            "LR",
            "LB",
            "LY",
            "LT",
            "LI",
            "LU",
            "MU",
            "MR",
            "MG",
            "YT",
            "MO",
            "MK",
            "MW",
            "MY",
            "ML",
            "UM",
            "MV",
            "MT",
            "MA",
            "MQ",
            "MH",
            "MX",
            "FM",
            "MZ",
            "MD",
            "MC",
            "MN",
            "MS",
            "MM",
            "NA",
            "NR",
            "NP",
            "NE",
            "NG",
            "NL",
            "NI",
            "NU",
            "NZ",
            "NC",
            "NO",
            "AE",
            "OM",
            "IM",
            "NF",
            "CX",
            "SH",
            "HM",
            "KY",
            "CK",
            "TC",
            "PK",
            "PW",
            "PS",
            "PA",
            "VA",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "KR",
            "LV",
            "RE",
            "RU",
            "RW",
            "RO",
            "SM",
            "WS",
            "ST",
            "SA",
            "SZ",
            "VC",
            "LC",
            "MP",
            "SC",
            "BL",
            "SN",
            "MF",
            "SX",
            "PM",
            "KN",
            "RS",
            "SG",
            "SY",
            "SK",
            "SI",
            "US",
            "SB",
            "SO",
            "SD",
            "SR",
            "SL",
            "TJ",
            "TH",
            "TW",
            "TZ",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TV",
            "TN",
            "TM",
            "TR",
            "UG",
            "UZ",
            "UA",
            "WF",
            "UY",
            "FO",
            "FJ",
            "PH",
            "FI",
            "FK",
            "FR",
            "GF",
            "PF",
            "TF",
            "HR",
            "CF",
            "TD",
            "ME",
            "CZ",
            "CL",
            "CH",
            "SE",
            "SJ",
            "LK",
            "EC",
            "GQ",
            "SV",
            "ER",
            "EE",
            "ET",
            "GS",
            "ZA",
            "JM",
            "JP"
          ]
        },
        "createMethodType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Marking Manufacturing Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0438\u0437\u0433\u043E\u0442\u043E\u0432\u043B\u0435\u043D\u0438\u044F)",
          "enum": [
            "SELF_MADE",
            "CEM",
            "CM",
            "CL",
            "CA"
          ]
        },
        "productionOrderId": {
          "type": "string",
          "example": "63b5d1cd-919b-4cef-b117-2ce59059bc33",
          "description": "Production Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductAlcoholKZ"
          }
        },
        "releaseMethodType": {
          "type": "string",
          "example": "IMPORT",
          "description": "Product Release Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0432\u044B\u043F\u0443\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432 \u043E\u0431\u043E\u0440\u043E\u0442)",
          "enum": [
            "PRODUCTION",
            "IMPORT",
            "REMAINS",
            "CROSSBORDER",
            "REMARK",
            "CONTRACT_PRODUCTION",
            "COMMISSION"
          ]
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoAlcoholKZ",
      "xml": {
        "name": "alcohol_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderDtoLightKZ": {
      "type": "object",
      "required": [
        "createMethodType",
        "products"
      ],
      "properties": {
        "country": {
          "type": "string",
          "example": "KZ",
          "description": "Country of Origin (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)",
          "enum": [
            "AU",
            "AT",
            "AZ",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AI",
            "AO",
            "AD",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AF",
            "BS",
            "BD",
            "BB",
            "BH",
            "BY",
            "BZ",
            "BE",
            "BJ",
            "BM",
            "BG",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "IO",
            "BN",
            "BV",
            "BF",
            "BI",
            "BT",
            "VU",
            "GB",
            "HU",
            "VE",
            "VG",
            "VI",
            "VN",
            "GA",
            "HT",
            "GY",
            "GM",
            "GH",
            "GP",
            "GT",
            "GN",
            "GW",
            "DE",
            "GG",
            "GI",
            "HN",
            "HK",
            "GD",
            "GL",
            "GR",
            "GE",
            "GU",
            "DK",
            "CD",
            "JE",
            "DJ",
            "DM",
            "DO",
            "EU",
            "EG",
            "ZM",
            "EH",
            "ZW",
            "IL",
            "IN",
            "ID",
            "JO",
            "IQ",
            "IR",
            "IE",
            "IS",
            "ES",
            "IT",
            "YE",
            "CV",
            "KZ",
            "KH",
            "CM",
            "CA",
            "QA",
            "KE",
            "CY",
            "KI",
            "CN",
            "CC",
            "CO",
            "KM",
            "CG",
            "KP",
            "CR",
            "CI",
            "CU",
            "KW",
            "KG",
            "CW",
            "LA",
            "LS",
            "LR",
            "LB",
            "LY",
            "LT",
            "LI",
            "LU",
            "MU",
            "MR",
            "MG",
            "YT",
            "MO",
            "MK",
            "MW",
            "MY",
            "ML",
            "UM",
            "MV",
            "MT",
            "MA",
            "MQ",
            "MH",
            "MX",
            "FM",
            "MZ",
            "MD",
            "MC",
            "MN",
            "MS",
            "MM",
            "NA",
            "NR",
            "NP",
            "NE",
            "NG",
            "NL",
            "NI",
            "NU",
            "NZ",
            "NC",
            "NO",
            "AE",
            "OM",
            "IM",
            "NF",
            "CX",
            "SH",
            "HM",
            "KY",
            "CK",
            "TC",
            "PK",
            "PW",
            "PS",
            "PA",
            "VA",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "KR",
            "LV",
            "RE",
            "RU",
            "RW",
            "RO",
            "SM",
            "WS",
            "ST",
            "SA",
            "SZ",
            "VC",
            "LC",
            "MP",
            "SC",
            "BL",
            "SN",
            "MF",
            "SX",
            "PM",
            "KN",
            "RS",
            "SG",
            "SY",
            "SK",
            "SI",
            "US",
            "SB",
            "SO",
            "SD",
            "SR",
            "SL",
            "TJ",
            "TH",
            "TW",
            "TZ",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TV",
            "TN",
            "TM",
            "TR",
            "UG",
            "UZ",
            "UA",
            "WF",
            "UY",
            "FO",
            "FJ",
            "PH",
            "FI",
            "FK",
            "FR",
            "GF",
            "PF",
            "TF",
            "HR",
            "CF",
            "TD",
            "ME",
            "CZ",
            "CL",
            "CH",
            "SE",
            "SJ",
            "LK",
            "EC",
            "GQ",
            "SV",
            "ER",
            "EE",
            "ET",
            "GS",
            "ZA",
            "JM",
            "JP"
          ]
        },
        "createMethodType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Marking Manufacturing Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0438\u0437\u0433\u043E\u0442\u043E\u0432\u043B\u0435\u043D\u0438\u044F)",
          "enum": [
            "SELF_MADE",
            "CEM",
            "CM",
            "CL",
            "CA"
          ]
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductLightKZ"
          }
        },
        "releaseMethodType": {
          "type": "string",
          "example": "PRODUCTION",
          "description": "Product Release Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0432\u044B\u043F\u0443\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432 \u043E\u0431\u043E\u0440\u043E\u0442)",
          "enum": [
            "PRODUCTION",
            "IMPORT",
            "REMAINS",
            "CROSSBORDER",
            "REMARK",
            "CONTRACT_PRODUCTION",
            "COMMISSION"
          ]
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoLightKZ",
      "xml": {
        "name": "light_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderDtoMilkKZ": {
      "type": "object",
      "required": [
        "createMethodType",
        "products"
      ],
      "properties": {
        "country": {
          "type": "string",
          "example": "KZ",
          "description": "Country of Origin (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)",
          "enum": [
            "AU",
            "AT",
            "AZ",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AI",
            "AO",
            "AD",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AF",
            "BS",
            "BD",
            "BB",
            "BH",
            "BY",
            "BZ",
            "BE",
            "BJ",
            "BM",
            "BG",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "IO",
            "BN",
            "BV",
            "BF",
            "BI",
            "BT",
            "VU",
            "GB",
            "HU",
            "VE",
            "VG",
            "VI",
            "VN",
            "GA",
            "HT",
            "GY",
            "GM",
            "GH",
            "GP",
            "GT",
            "GN",
            "GW",
            "DE",
            "GG",
            "GI",
            "HN",
            "HK",
            "GD",
            "GL",
            "GR",
            "GE",
            "GU",
            "DK",
            "CD",
            "JE",
            "DJ",
            "DM",
            "DO",
            "EU",
            "EG",
            "ZM",
            "EH",
            "ZW",
            "IL",
            "IN",
            "ID",
            "JO",
            "IQ",
            "IR",
            "IE",
            "IS",
            "ES",
            "IT",
            "YE",
            "CV",
            "KZ",
            "KH",
            "CM",
            "CA",
            "QA",
            "KE",
            "CY",
            "KI",
            "CN",
            "CC",
            "CO",
            "KM",
            "CG",
            "KP",
            "CR",
            "CI",
            "CU",
            "KW",
            "KG",
            "CW",
            "LA",
            "LS",
            "LR",
            "LB",
            "LY",
            "LT",
            "LI",
            "LU",
            "MU",
            "MR",
            "MG",
            "YT",
            "MO",
            "MK",
            "MW",
            "MY",
            "ML",
            "UM",
            "MV",
            "MT",
            "MA",
            "MQ",
            "MH",
            "MX",
            "FM",
            "MZ",
            "MD",
            "MC",
            "MN",
            "MS",
            "MM",
            "NA",
            "NR",
            "NP",
            "NE",
            "NG",
            "NL",
            "NI",
            "NU",
            "NZ",
            "NC",
            "NO",
            "AE",
            "OM",
            "IM",
            "NF",
            "CX",
            "SH",
            "HM",
            "KY",
            "CK",
            "TC",
            "PK",
            "PW",
            "PS",
            "PA",
            "VA",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "KR",
            "LV",
            "RE",
            "RU",
            "RW",
            "RO",
            "SM",
            "WS",
            "ST",
            "SA",
            "SZ",
            "VC",
            "LC",
            "MP",
            "SC",
            "BL",
            "SN",
            "MF",
            "SX",
            "PM",
            "KN",
            "RS",
            "SG",
            "SY",
            "SK",
            "SI",
            "US",
            "SB",
            "SO",
            "SD",
            "SR",
            "SL",
            "TJ",
            "TH",
            "TW",
            "TZ",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TV",
            "TN",
            "TM",
            "TR",
            "UG",
            "UZ",
            "UA",
            "WF",
            "UY",
            "FO",
            "FJ",
            "PH",
            "FI",
            "FK",
            "FR",
            "GF",
            "PF",
            "TF",
            "HR",
            "CF",
            "TD",
            "ME",
            "CZ",
            "CL",
            "CH",
            "SE",
            "SJ",
            "LK",
            "EC",
            "GQ",
            "SV",
            "ER",
            "EE",
            "ET",
            "GS",
            "ZA",
            "JM",
            "JP"
          ]
        },
        "createMethodType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Marking Manufacturing Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0438\u0437\u0433\u043E\u0442\u043E\u0432\u043B\u0435\u043D\u0438\u044F)",
          "enum": [
            "SELF_MADE",
            "CEM",
            "CM",
            "CL",
            "CA"
          ]
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductMilkKZ"
          }
        },
        "releaseMethodType": {
          "type": "string",
          "example": "PRODUCTION",
          "description": "Product Release Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0432\u044B\u043F\u0443\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432 \u043E\u0431\u043E\u0440\u043E\u0442)",
          "enum": [
            "PRODUCTION",
            "IMPORT",
            "REMAINS",
            "CROSSBORDER",
            "REMARK",
            "CONTRACT_PRODUCTION",
            "COMMISSION"
          ]
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoMilkKZ",
      "xml": {
        "name": "milk_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderDtoPharmaKZ": {
      "type": "object",
      "required": [
        "factoryCountry",
        "factoryId",
        "productCode",
        "productDescription",
        "productionLineId",
        "products"
      ],
      "properties": {
        "country": {
          "type": "string",
          "example": "KZ",
          "description": "Country of Origin (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)",
          "enum": [
            "AU",
            "AT",
            "AZ",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AI",
            "AO",
            "AD",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AF",
            "BS",
            "BD",
            "BB",
            "BH",
            "BY",
            "BZ",
            "BE",
            "BJ",
            "BM",
            "BG",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "IO",
            "BN",
            "BV",
            "BF",
            "BI",
            "BT",
            "VU",
            "GB",
            "HU",
            "VE",
            "VG",
            "VI",
            "VN",
            "GA",
            "HT",
            "GY",
            "GM",
            "GH",
            "GP",
            "GT",
            "GN",
            "GW",
            "DE",
            "GG",
            "GI",
            "HN",
            "HK",
            "GD",
            "GL",
            "GR",
            "GE",
            "GU",
            "DK",
            "CD",
            "JE",
            "DJ",
            "DM",
            "DO",
            "EU",
            "EG",
            "ZM",
            "EH",
            "ZW",
            "IL",
            "IN",
            "ID",
            "JO",
            "IQ",
            "IR",
            "IE",
            "IS",
            "ES",
            "IT",
            "YE",
            "CV",
            "KZ",
            "KH",
            "CM",
            "CA",
            "QA",
            "KE",
            "CY",
            "KI",
            "CN",
            "CC",
            "CO",
            "KM",
            "CG",
            "KP",
            "CR",
            "CI",
            "CU",
            "KW",
            "KG",
            "CW",
            "LA",
            "LS",
            "LR",
            "LB",
            "LY",
            "LT",
            "LI",
            "LU",
            "MU",
            "MR",
            "MG",
            "YT",
            "MO",
            "MK",
            "MW",
            "MY",
            "ML",
            "UM",
            "MV",
            "MT",
            "MA",
            "MQ",
            "MH",
            "MX",
            "FM",
            "MZ",
            "MD",
            "MC",
            "MN",
            "MS",
            "MM",
            "NA",
            "NR",
            "NP",
            "NE",
            "NG",
            "NL",
            "NI",
            "NU",
            "NZ",
            "NC",
            "NO",
            "AE",
            "OM",
            "IM",
            "NF",
            "CX",
            "SH",
            "HM",
            "KY",
            "CK",
            "TC",
            "PK",
            "PW",
            "PS",
            "PA",
            "VA",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "KR",
            "LV",
            "RE",
            "RU",
            "RW",
            "RO",
            "SM",
            "WS",
            "ST",
            "SA",
            "SZ",
            "VC",
            "LC",
            "MP",
            "SC",
            "BL",
            "SN",
            "MF",
            "SX",
            "PM",
            "KN",
            "RS",
            "SG",
            "SY",
            "SK",
            "SI",
            "US",
            "SB",
            "SO",
            "SD",
            "SR",
            "SL",
            "TJ",
            "TH",
            "TW",
            "TZ",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TV",
            "TN",
            "TM",
            "TR",
            "UG",
            "UZ",
            "UA",
            "WF",
            "UY",
            "FO",
            "FJ",
            "PH",
            "FI",
            "FK",
            "FR",
            "GF",
            "PF",
            "TF",
            "HR",
            "CF",
            "TD",
            "ME",
            "CZ",
            "CL",
            "CH",
            "SE",
            "SJ",
            "LK",
            "EC",
            "GQ",
            "SV",
            "ER",
            "EE",
            "ET",
            "GS",
            "ZA",
            "JM",
            "JP"
          ]
        },
        "expectedStartDate": {
          "type": "string",
          "example": "2019-03-01",
          "description": "Expected Start Date (\u041E\u0436\u0438\u0434\u0430\u0435\u043C\u0430\u044F \u0434\u0430\u0442\u0430 \u043D\u0430\u0447\u0430\u043B\u0430)"
        },
        "factoryAddress": {
          "type": "string",
          "example": "ul. Pervaya Tabachnaya, 7",
          "description": "Factory Address (\u0410\u0434\u0440\u0435\u0441 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)"
        },
        "factoryCountry": {
          "type": "string",
          "example": "RU",
          "description": "Factory Country (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044F)"
        },
        "factoryId": {
          "type": "string",
          "example": "ftf_001",
          "description": "Factory Identifier (GLN) \u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430. (\u0413\u043B\u043E\u0431\u0430\u043B\u044C\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043C\u0435\u0441\u0442\u0430 \u043D\u0430\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u044F)"
        },
        "factoryName": {
          "type": "string",
          "example": "First Tobacco Factory",
          "description": "Factory Name (\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)"
        },
        "poNumber": {
          "type": "string",
          "example": "123456",
          "description": "PO Number (\u041D\u043E\u043C\u0435\u0440 \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "productCode": {
          "type": "string",
          "example": "ABCD123456",
          "description": "Product Code (\u041A\u043E\u0434 \u043F\u0440\u043E\u0434\u0443\u043A\u0442\u0430)"
        },
        "productDescription": {
          "type": "string",
          "example": "Cigarettes Friend",
          "description": "Product Description (\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0434\u0443\u043A\u0442\u0430)"
        },
        "productionLineId": {
          "type": "string",
          "example": "123",
          "description": "Line Identifier (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": 123,
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductPharmaKZ"
          }
        },
        "releaseMethodType": {
          "type": "string",
          "example": "PRODUCTION",
          "description": "Product Release Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0432\u044B\u043F\u0443\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432 \u043E\u0431\u043E\u0440\u043E\u0442)",
          "enum": [
            "PRODUCTION",
            "IMPORT",
            "REMAINS",
            "CROSSBORDER",
            "REMARK",
            "CONTRACT_PRODUCTION",
            "COMMISSION"
          ]
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoPharmaKZ",
      "xml": {
        "name": "pharma_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderDtoShoesKZ": {
      "type": "object",
      "required": [
        "contactPerson",
        "createMethodType",
        "products",
        "releaseMethodType"
      ],
      "properties": {
        "contactPerson": {
          "type": "string",
          "example": "John Smith (\u0418\u0432\u0430\u043D\u043E\u0432 \u041F\u0435\u0442\u0440 \u0421\u0438\u0434\u043E\u0440\u043E\u0432\u0438\u0447)",
          "description": "Contact Person (\u041A\u043E\u043D\u0442\u0430\u043A\u0442\u043D\u043E\u0435 \u043B\u0438\u0446\u043E)"
        },
        "country": {
          "type": "string",
          "example": "RU",
          "description": "Country of Origin (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)",
          "enum": [
            "AU",
            "AT",
            "AZ",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AI",
            "AO",
            "AD",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AF",
            "BS",
            "BD",
            "BB",
            "BH",
            "BY",
            "BZ",
            "BE",
            "BJ",
            "BM",
            "BG",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "IO",
            "BN",
            "BV",
            "BF",
            "BI",
            "BT",
            "VU",
            "GB",
            "HU",
            "VE",
            "VG",
            "VI",
            "VN",
            "GA",
            "HT",
            "GY",
            "GM",
            "GH",
            "GP",
            "GT",
            "GN",
            "GW",
            "DE",
            "GG",
            "GI",
            "HN",
            "HK",
            "GD",
            "GL",
            "GR",
            "GE",
            "GU",
            "DK",
            "CD",
            "JE",
            "DJ",
            "DM",
            "DO",
            "EU",
            "EG",
            "ZM",
            "EH",
            "ZW",
            "IL",
            "IN",
            "ID",
            "JO",
            "IQ",
            "IR",
            "IE",
            "IS",
            "ES",
            "IT",
            "YE",
            "CV",
            "KZ",
            "KH",
            "CM",
            "CA",
            "QA",
            "KE",
            "CY",
            "KI",
            "CN",
            "CC",
            "CO",
            "KM",
            "CG",
            "KP",
            "CR",
            "CI",
            "CU",
            "KW",
            "KG",
            "CW",
            "LA",
            "LS",
            "LR",
            "LB",
            "LY",
            "LT",
            "LI",
            "LU",
            "MU",
            "MR",
            "MG",
            "YT",
            "MO",
            "MK",
            "MW",
            "MY",
            "ML",
            "UM",
            "MV",
            "MT",
            "MA",
            "MQ",
            "MH",
            "MX",
            "FM",
            "MZ",
            "MD",
            "MC",
            "MN",
            "MS",
            "MM",
            "NA",
            "NR",
            "NP",
            "NE",
            "NG",
            "NL",
            "NI",
            "NU",
            "NZ",
            "NC",
            "NO",
            "AE",
            "OM",
            "IM",
            "NF",
            "CX",
            "SH",
            "HM",
            "KY",
            "CK",
            "TC",
            "PK",
            "PW",
            "PS",
            "PA",
            "VA",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "KR",
            "LV",
            "RE",
            "RU",
            "RW",
            "RO",
            "SM",
            "WS",
            "ST",
            "SA",
            "SZ",
            "VC",
            "LC",
            "MP",
            "SC",
            "BL",
            "SN",
            "MF",
            "SX",
            "PM",
            "KN",
            "RS",
            "SG",
            "SY",
            "SK",
            "SI",
            "US",
            "SB",
            "SO",
            "SD",
            "SR",
            "SL",
            "TJ",
            "TH",
            "TW",
            "TZ",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TV",
            "TN",
            "TM",
            "TR",
            "UG",
            "UZ",
            "UA",
            "WF",
            "UY",
            "FO",
            "FJ",
            "PH",
            "FI",
            "FK",
            "FR",
            "GF",
            "PF",
            "TF",
            "HR",
            "CF",
            "TD",
            "ME",
            "CZ",
            "CL",
            "CH",
            "SE",
            "SJ",
            "LK",
            "EC",
            "GQ",
            "SV",
            "ER",
            "EE",
            "ET",
            "GS",
            "ZA",
            "JM",
            "JP"
          ]
        },
        "createMethodType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Marking Manufacturing Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0438\u0437\u0433\u043E\u0442\u043E\u0432\u043B\u0435\u043D\u0438\u044F)",
          "enum": [
            "SELF_MADE",
            "CEM",
            "CM",
            "CL",
            "CA"
          ]
        },
        "productionOrderId": {
          "type": "string",
          "example": "63b5d1cd-919b-4cef-b117-2ce59059bc33",
          "description": "Production Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductShoesKZ"
          }
        },
        "releaseMethodType": {
          "type": "string",
          "example": "IMPORT",
          "description": "Product Release Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0432\u044B\u043F\u0443\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432 \u043E\u0431\u043E\u0440\u043E\u0442)",
          "enum": [
            "PRODUCTION",
            "IMPORT",
            "REMAINS",
            "CROSSBORDER",
            "REMARK",
            "CONTRACT_PRODUCTION",
            "COMMISSION"
          ]
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoShoesKZ",
      "xml": {
        "name": "shoes_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderDtoTobaccoKZ": {
      "type": "object",
      "required": [
        "factoryCountry",
        "factoryId",
        "productCode",
        "productDescription",
        "productionLineId",
        "products"
      ],
      "properties": {
        "expectedStartDate": {
          "type": "string",
          "example": "2019-03-01",
          "description": "Expected Start Date (\u041E\u0436\u0438\u0434\u0430\u0435\u043C\u0430\u044F \u0434\u0430\u0442\u0430 \u043D\u0430\u0447\u0430\u043B\u0430)"
        },
        "factoryAddress": {
          "type": "string",
          "example": "ul. Pervaya Tabachnaya, 7",
          "description": "Factory Address (\u0410\u0434\u0440\u0435\u0441 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)"
        },
        "factoryCountry": {
          "type": "string",
          "example": "RU",
          "description": "Factory Country (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044F)"
        },
        "factoryId": {
          "type": "string",
          "example": "ftf_001",
          "description": "Factory Identifier (GLN) \u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430. (\u0413\u043B\u043E\u0431\u0430\u043B\u044C\u043D\u044B\u0439 \u043D\u043E\u043C\u0435\u0440 \u043C\u0435\u0441\u0442\u0430 \u043D\u0430\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u044F)"
        },
        "factoryName": {
          "type": "string",
          "example": "First Tobacco Factory",
          "description": "Factory Name (\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)"
        },
        "poNumber": {
          "type": "string",
          "example": "123456",
          "description": "PO Number (\u041D\u043E\u043C\u0435\u0440 \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "productCode": {
          "type": "string",
          "example": "ABCD123456",
          "description": "Product Code (\u041A\u043E\u0434 \u043F\u0440\u043E\u0434\u0443\u043A\u0442\u0430)"
        },
        "productDescription": {
          "type": "string",
          "example": "Cigarettes Friend",
          "description": "Product Description (\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0434\u0443\u043A\u0442\u0430)"
        },
        "productionLineId": {
          "type": "string",
          "example": "123",
          "description": "Line Identifier (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductTobaccoKZ"
          }
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoTobaccoKZ",
      "xml": {
        "name": "tobacco_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderDtoWaterKZ": {
      "type": "object",
      "required": [
        "createMethodType",
        "products"
      ],
      "properties": {
        "country": {
          "type": "string",
          "example": "KZ",
          "description": "Country of Origin (\u0421\u0442\u0440\u0430\u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0430)",
          "enum": [
            "AU",
            "AT",
            "AZ",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AI",
            "AO",
            "AD",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AF",
            "BS",
            "BD",
            "BB",
            "BH",
            "BY",
            "BZ",
            "BE",
            "BJ",
            "BM",
            "BG",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BR",
            "IO",
            "BN",
            "BV",
            "BF",
            "BI",
            "BT",
            "VU",
            "GB",
            "HU",
            "VE",
            "VG",
            "VI",
            "VN",
            "GA",
            "HT",
            "GY",
            "GM",
            "GH",
            "GP",
            "GT",
            "GN",
            "GW",
            "DE",
            "GG",
            "GI",
            "HN",
            "HK",
            "GD",
            "GL",
            "GR",
            "GE",
            "GU",
            "DK",
            "CD",
            "JE",
            "DJ",
            "DM",
            "DO",
            "EU",
            "EG",
            "ZM",
            "EH",
            "ZW",
            "IL",
            "IN",
            "ID",
            "JO",
            "IQ",
            "IR",
            "IE",
            "IS",
            "ES",
            "IT",
            "YE",
            "CV",
            "KZ",
            "KH",
            "CM",
            "CA",
            "QA",
            "KE",
            "CY",
            "KI",
            "CN",
            "CC",
            "CO",
            "KM",
            "CG",
            "KP",
            "CR",
            "CI",
            "CU",
            "KW",
            "KG",
            "CW",
            "LA",
            "LS",
            "LR",
            "LB",
            "LY",
            "LT",
            "LI",
            "LU",
            "MU",
            "MR",
            "MG",
            "YT",
            "MO",
            "MK",
            "MW",
            "MY",
            "ML",
            "UM",
            "MV",
            "MT",
            "MA",
            "MQ",
            "MH",
            "MX",
            "FM",
            "MZ",
            "MD",
            "MC",
            "MN",
            "MS",
            "MM",
            "NA",
            "NR",
            "NP",
            "NE",
            "NG",
            "NL",
            "NI",
            "NU",
            "NZ",
            "NC",
            "NO",
            "AE",
            "OM",
            "IM",
            "NF",
            "CX",
            "SH",
            "HM",
            "KY",
            "CK",
            "TC",
            "PK",
            "PW",
            "PS",
            "PA",
            "VA",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "KR",
            "LV",
            "RE",
            "RU",
            "RW",
            "RO",
            "SM",
            "WS",
            "ST",
            "SA",
            "SZ",
            "VC",
            "LC",
            "MP",
            "SC",
            "BL",
            "SN",
            "MF",
            "SX",
            "PM",
            "KN",
            "RS",
            "SG",
            "SY",
            "SK",
            "SI",
            "US",
            "SB",
            "SO",
            "SD",
            "SR",
            "SL",
            "TJ",
            "TH",
            "TW",
            "TZ",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TV",
            "TN",
            "TM",
            "TR",
            "UG",
            "UZ",
            "UA",
            "WF",
            "UY",
            "FO",
            "FJ",
            "PH",
            "FI",
            "FK",
            "FR",
            "GF",
            "PF",
            "TF",
            "HR",
            "CF",
            "TD",
            "ME",
            "CZ",
            "CL",
            "CH",
            "SE",
            "SJ",
            "LK",
            "EC",
            "GQ",
            "SV",
            "ER",
            "EE",
            "ET",
            "GS",
            "ZA",
            "JM",
            "JP"
          ]
        },
        "createMethodType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Marking Manufacturing Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0438\u0437\u0433\u043E\u0442\u043E\u0432\u043B\u0435\u043D\u0438\u044F)",
          "enum": [
            "SELF_MADE",
            "CEM",
            "CM",
            "CL",
            "CA"
          ]
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "products": {
          "type": "array",
          "description": "Product list (\u0421\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/OrderProductWaterKZ"
          }
        },
        "releaseMethodType": {
          "type": "string",
          "example": "PRODUCTION",
          "description": "Product Release Type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0432\u044B\u043F\u0443\u0441\u043A\u0430 \u0442\u043E\u0432\u0430\u0440\u043E\u0432 \u0432 \u043E\u0431\u043E\u0440\u043E\u0442)",
          "enum": [
            "PRODUCTION",
            "IMPORT",
            "REMAINS",
            "CROSSBORDER",
            "REMARK",
            "CONTRACT_PRODUCTION",
            "COMMISSION"
          ]
        },
        "serviceProviderId": {
          "type": "string"
        }
      },
      "title": "OrderDtoWaterKZ",
      "xml": {
        "name": "water_kz",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductAlcoholKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "cisType": {
          "type": "string",
          "example": "UNIT",
          "description": "CIS type (\u0422\u0438\u043F \u041A\u041C)",
          "enum": [
            "UNIT",
            "BUNDLE",
            "SET",
            "GROUP"
          ]
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductAlcoholKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductLightKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "cisType": {
          "type": "string",
          "example": "UNIT",
          "description": "CIS type (\u0422\u0438\u043F \u041A\u041C)",
          "enum": [
            "UNIT",
            "BUNDLE",
            "SET",
            "GROUP"
          ]
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductLightKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductMilkKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "cisType": {
          "type": "string",
          "example": "UNIT",
          "description": "CIS type (\u0422\u0438\u043F \u041A\u041C)",
          "enum": [
            "UNIT",
            "BUNDLE",
            "SET",
            "GROUP"
          ]
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductMilkKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductPharmaKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductPharmaKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductShoesKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "exporterTaxpayerId": {
          "type": "string",
          "example": 1234567890,
          "description": "\u0418\u041D\u041D/\u0423\u041D\u0411 (\u0438\u043B\u0438 \u0430\u043D\u0430\u043B\u043E\u0433) \u044D\u043A\u0441\u043F\u043E\u0440\u0442\u0435\u0440\u0430"
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductShoesKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductTobaccoKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductTobaccoKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderProductWaterKZ": {
      "type": "object",
      "required": [
        "gtin",
        "quantity",
        "serialNumberType",
        "templateId"
      ],
      "properties": {
        "cisType": {
          "type": "string",
          "example": "UNIT",
          "description": "CIS type (\u0422\u0438\u043F \u041A\u041C)",
          "enum": [
            "UNIT",
            "BUNDLE",
            "SET",
            "GROUP"
          ]
        },
        "gtin": {
          "type": "string",
          "example": "01334567894339",
          "description": "Product GTIN (GTIN \u0442\u043E\u0432\u0430\u0440\u0430)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "Requested Identification Code quantity [Required only if serialNumberType = OPERATOR] (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u041A\u041C [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "minimum": 1,
          "maximum": 150000,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        },
        "serialNumberType": {
          "type": "string",
          "example": "SELF_MADE",
          "description": "Serial number source type (\u0421\u043F\u043E\u0441\u043E\u0431 \u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438\u043D\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0441\u0435\u0440\u0438\u0439\u043D\u043E\u0433\u043E \u043D\u043E\u043C\u0435\u0440\u0430)",
          "enum": [
            "SELF_MADE",
            "OPERATOR"
          ]
        },
        "serialNumbers": {
          "type": "array",
          "example": [],
          "description": "Serial numbers [Required only if serialNumberType = SELF_MADE] (\u0421\u043F\u0438\u0441\u043E\u043A \u0441\u0435\u0440\u0438\u0439\u043D\u044B\u0445 \u043D\u043E\u043C\u0435\u0440\u043E\u0432 [\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u0435\u043D, \u0435\u0441\u043B\u0438 serialNumberType = SELF_MADE])",
          "items": {
            "type": "string"
          }
        },
        "stickerId": {
          "type": "string",
          "example": 1,
          "description": "\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u044D\u0442\u0438\u043A\u0435\u0442\u043A\u0438"
        },
        "templateId": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Identification Code Template ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0448\u0430\u0431\u043B\u043E\u043D\u0430 \u041A\u041C)",
          "minimum": 1,
          "maximum": 20,
          "exclusiveMinimum": false,
          "exclusiveMaximum": false
        }
      },
      "title": "OrderProductWaterKZ",
      "xml": {
        "name": "product",
        "attribute": false,
        "wrapped": false
      }
    },
    "OrderResult": {
      "type": "object",
      "required": [
        "expectedCompleteTimestamp",
        "omsId",
        "orderId"
      ],
      "properties": {
        "expectedCompleteTimestamp": {
          "type": "integer",
          "format": "int64",
          "example": 6131,
          "description": "Time of planned order execution in ms (\u0412\u0440\u0435\u043C\u044F \u043F\u043B\u0430\u043D\u0438\u0440\u0443\u0435\u043C\u043E\u0433\u043E \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u0430 \u0432 \u043C\u0441)"
        },
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "orderId": {
          "type": "string",
          "example": "05f52b01-ba4b-4dc7-a94a-7846db44ac63",
          "description": "Unique identifier of a business order for issuing MC (\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430 \u043D\u0430 \u044D\u043C\u0438\u0441\u0441\u0438\u044E \u041A\u041C)"
        }
      },
      "title": "OrderResult"
    },
    "OrderSummaryInfo": {
      "type": "object",
      "properties": {
        "buffers": {
          "type": "array",
          "description": "Array of buffer status information (\u041C\u0430\u0441\u0441\u0438\u0432 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438 \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435 \u0431\u0443\u0444\u0435\u0440\u043E\u0432)",
          "items": {
            "$ref": "#/definitions/BufferInfo"
          }
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Order creation time (\u0412\u0440\u0435\u043C\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "declineReason": {
          "type": "string",
          "description": "Order decline reason (\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "orderId": {
          "type": "string",
          "example": "05f52b01-ba4b-4dc7-a94a-7846db44ac63",
          "description": "Unique OMS Order ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "orderStatus": {
          "type": "string",
          "example": "READY",
          "description": "Business order status (\u0421\u0442\u0430\u0442\u0443\u0441 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u0430)",
          "enum": [
            "CREATED",
            "PENDING",
            "DECLINED",
            "APPROVED",
            "READY",
            "EXPIRED",
            "CLOSED"
          ]
        }
      },
      "title": "OrderSummaryInfo"
    },
    "OrdersSummaries": {
      "type": "object",
      "required": [
        "omsId"
      ],
      "properties": {
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "orderInfos": {
          "type": "array",
          "description": "An array of business orders with their statuses (\u041C\u0430\u0441\u0441\u0438\u0432 \u0431\u0438\u0437\u043D\u0435\u0441-\u0437\u0430\u043A\u0430\u0437\u043E\u0432 \u0441 \u0438\u0445 \u0441\u0442\u0430\u0442\u0443\u0441\u0430\u043C\u0438)",
          "items": {
            "$ref": "#/definitions/OrderSummaryInfo"
          }
        }
      },
      "title": "OrdersSummaries"
    },
    "PoolInfo": {
      "type": "object",
      "required": [
        "isRegistrarReady",
        "lastRegistrarErrorTimestamp",
        "leftInRegistrar",
        "quantity",
        "registrarErrorCount",
        "registrarId",
        "status"
      ],
      "properties": {
        "isRegistrarReady": {
          "type": "boolean",
          "example": true,
          "description": "Logical flag that shows if the Emission Registrar is currently ready for orders (\u0413\u043E\u0442\u043E\u0432\u043D\u043E\u0441\u0442\u044C \u0420\u042D)"
        },
        "lastRegistrarErrorTimestamp": {
          "type": "integer",
          "format": "int64",
          "example": 0,
          "description": "Timestamp when the last Emission Registrar error occurred (\u041C\u0435\u0442\u043A\u0430 \u0432\u0440\u0435\u043C\u0435\u043D\u0438 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0439 \u043D\u0430\u0431\u043B\u044E\u0434\u0430\u0432\u0448\u0435\u0439\u0441\u044F \u043E\u0448\u0438\u0431\u043A\u0438 \u0420\u042D)"
        },
        "leftInRegistrar": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Number of unused ICs in the pool (\u041E\u0441\u0442\u0430\u0432\u0448\u0435\u0435\u0441\u0435 \u043A\u043E\u043B-\u0432\u043E \u041A\u041C \u0432 \u043F\u0443\u043B\u0435)"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "description": "Number of ICs ordered in the array (\u0417\u0430\u043A\u0430\u0437\u0430\u043D\u043D\u043E\u0435 \u043A\u043E\u043B-\u0432\u043E \u041A\u041C \u0432 \u043F\u0443\u043B\u0435)"
        },
        "registrarErrorCount": {
          "type": "integer",
          "format": "int32",
          "example": 0,
          "description": "Number of Emission Registrar errors occurred (\u041A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u043E\u0448\u0438\u0431\u043E\u043A \u0420\u042D)"
        },
        "registrarId": {
          "type": "string",
          "example": "0000000099990099",
          "description": "Emission Registrar Identifier (\u041D\u043E\u043C\u0435\u0440 \u0420\u042D)"
        },
        "rejectionReason": {
          "type": "string",
          "example": "\u041E\u0448\u0438\u0431\u043A\u0430",
          "description": "The IC array rejection reason returned by the Emission Registrar (\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u043E\u0442\u043A\u0430\u0437\u0430)"
        },
        "status": {
          "type": "string",
          "example": "REQUESTED",
          "description": "IC array status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043F\u0443\u043B\u0430)",
          "enum": [
            "ER_NOT_AVAILABLE",
            "REQUEST_ERROR",
            "REQUESTED",
            "IN_PROCESS",
            "READY",
            "CLOSED",
            "DELETED",
            "REJECTED",
            "CANCEL_RESERVE"
          ]
        }
      },
      "title": "PoolInfo"
    },
    "ProductInfo": {
      "type": "object",
      "properties": {
        "gtin": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "ProductInfo"
    },
    "ProtobeansFieldError": {
      "type": "object",
      "properties": {
        "fieldError": {
          "type": "string"
        },
        "fieldName": {
          "type": "string"
        }
      },
      "title": "ProtobeansFieldError"
    },
    "ReceiptDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      },
      "title": "ReceiptDto"
    },
    "ReceiptsDto": {
      "type": "object",
      "properties": {
        "receipts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceiptDto"
          }
        }
      },
      "title": "ReceiptsDto"
    },
    "ReportResult": {
      "type": "object",
      "required": [
        "omsId"
      ],
      "properties": {
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "reportId": {
          "type": "string",
          "example": "05f52b01-ba4b-4dc7-a94a-7846db44ac63",
          "description": "Unique OMS Report ID (\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430 \u0432 \u0421\u0423\u0417)"
        }
      },
      "title": "ReportResult"
    },
    "ReportStatusDto": {
      "type": "object",
      "required": [
        "omsId",
        "reportId",
        "reportStatus"
      ],
      "properties": {
        "errorReason": {
          "type": "string",
          "description": "\u041F\u0440\u0438\u0447\u0438\u043D\u0430 \u043E\u0442\u043A\u043B\u043E\u043D\u0435\u043D\u0438\u044F \u043E\u0442\u0447\u0435\u0442\u0430 (\u043E\u0431\u043D\u0430\u0440\u0443\u0436\u0435\u043D\u043D\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430)"
        },
        "omsId": {
          "type": "string",
          "example": "d1bc8149-7b39-4aa2-afb1-df1b6c8f80c5",
          "description": "\u0423\u043D\u0438\u043A\u0430\u043B\u044C\u043D\u044B\u0439 \u0438\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u0421\u0423\u0417"
        },
        "reportId": {
          "type": "string",
          "description": "Report ID (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0435\u0442\u0430)"
        },
        "reportStatus": {
          "type": "string",
          "description": "Report status (\u0421\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0447\u0435\u0442\u0430)",
          "enum": [
            "DRAFT",
            "PENDING",
            "CHECK",
            "READY_TO_SEND",
            "REJECTED",
            "SENT"
          ]
        }
      },
      "title": "ReportStatusDto"
    },
    "RestResult": {
      "type": "object",
      "properties": {
        "fieldErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtobeansFieldError"
          }
        },
        "globalErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "RestResult"
    },
    "UtilisationReportDtoAlcoholKZ": {
      "type": "object",
      "required": [
        "sntins",
        "usageType"
      ],
      "properties": {
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "List of Utilized Identification Codes (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "usageType": {
          "type": "string",
          "example": "VERIFIED",
          "description": "Usage type (\u0422\u0438\u043F \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F)",
          "enum": [
            "USED_FOR_PRODUCTION",
            "SENT_TO_PRINTER",
            "PRINTED",
            "PRINTER_LOST",
            "VERIFIED"
          ]
        }
      },
      "title": "UtilisationReportDtoAlcoholKZ"
    },
    "UtilisationReportDtoMilkKZ": {
      "type": "object",
      "required": [
        "expirationDate",
        "seriesNumber",
        "sntins",
        "usageType"
      ],
      "properties": {
        "expirationDate": {
          "type": "string",
          "example": "2024-10-31",
          "description": "Expiration Data (\u0414\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0438\u044F \u0441\u0440\u043E\u043A\u0430 \u0433\u043E\u0434\u043D\u043E\u0441\u0442\u0438)"
        },
        "seriesNumber": {
          "type": "string",
          "example": "123456789",
          "description": "Series Number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u0441\u0435\u0440\u0438\u0438)"
        },
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "List of Utilized Identification Codes (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "usageType": {
          "type": "string",
          "example": "VERIFIED",
          "description": "Usage type (\u0422\u0438\u043F \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F)",
          "enum": [
            "USED_FOR_PRODUCTION",
            "SENT_TO_PRINTER",
            "PRINTED",
            "PRINTER_LOST",
            "VERIFIED"
          ]
        }
      },
      "title": "UtilisationReportDtoMilkKZ"
    },
    "UtilisationReportDtoPharmaKZ": {
      "type": "object",
      "required": [
        "expirationDate",
        "seriesNumber",
        "sntins",
        "usageType"
      ],
      "properties": {
        "brandcode": {
          "type": "string",
          "example": "Lorem Ipsum",
          "description": "Product Brand Name (\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0440\u0435\u043D\u0434\u0430 \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u0438)"
        },
        "expirationDate": {
          "type": "string",
          "example": "2024-10-31",
          "description": "Expiration Data (\u0414\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u0447\u0435\u043D\u0438\u044F \u0441\u0440\u043E\u043A\u0430 \u0433\u043E\u0434\u043D\u043E\u0441\u0442\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "seriesNumber": {
          "type": "string",
          "example": "123456789",
          "description": "Series Number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u0441\u0435\u0440\u0438\u0438)"
        },
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "List of Utilized Identification Codes (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "sourceReportId": {
          "type": "string",
          "example": "8ed74f90-0119-48f2-b289-379707934e2f",
          "description": "Utilisation report identifier of APCS (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0451\u0442\u0430 \u043E \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u0410\u0421\u0423\u0422\u041F)"
        },
        "usageType": {
          "type": "string",
          "example": "VERIFIED",
          "description": "Usage type (\u0422\u0438\u043F \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F)",
          "enum": [
            "USED_FOR_PRODUCTION",
            "SENT_TO_PRINTER",
            "PRINTED",
            "PRINTER_LOST",
            "VERIFIED"
          ]
        }
      },
      "title": "UtilisationReportDtoPharmaKZ"
    },
    "UtilisationReportDtoTobaccoKZ": {
      "type": "object",
      "required": [
        "productionLineId",
        "sntins",
        "usageType"
      ],
      "properties": {
        "brandcode": {
          "type": "string",
          "example": "Lorem Ipsum",
          "description": "Product Brand Name (\u041D\u0430\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435 \u0431\u0440\u0435\u043D\u0434\u0430 \u043F\u0440\u043E\u0434\u0443\u043A\u0446\u0438\u0438)"
        },
        "productionLineId": {
          "type": "string",
          "example": "455",
          "description": "Production line number (\u041D\u043E\u043C\u0435\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0439 \u043B\u0438\u043D\u0438\u0438)"
        },
        "productionOrderId": {
          "type": "string",
          "example": "100987",
          "description": "The Id of the production order (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0437\u0430\u043A\u0430\u0437\u0430)"
        },
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "List of Utilized Identification Codes (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "sourceReportId": {
          "type": "string",
          "example": "8ed74f90-0119-48f2-b289-379707934e2f",
          "description": "Utilisation report identifier of APCS (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0451\u0442\u0430 \u043E \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u0410\u0421\u0423\u0422\u041F)"
        },
        "usageType": {
          "type": "string",
          "example": "VERIFIED",
          "description": "Usage type (\u0422\u0438\u043F \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F)",
          "enum": [
            "USED_FOR_PRODUCTION",
            "SENT_TO_PRINTER",
            "PRINTED",
            "PRINTER_LOST",
            "VERIFIED"
          ]
        }
      },
      "title": "UtilisationReportDtoTobaccoKZ"
    },
    "UtilisationReportDtoWaterKZ": {
      "type": "object",
      "required": [
        "sntins",
        "usageType"
      ],
      "properties": {
        "sntins": {
          "type": "array",
          "example": [
            "010133456789433921i7RAGfsaWLTnA",
            "010133456789433921bRwqoIwHtxzoM"
          ],
          "description": "List of Utilized Identification Codes (\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0445 \u041A\u041C)",
          "items": {
            "type": "string"
          }
        },
        "sourceReportId": {
          "type": "string",
          "example": "8ed74f90-0119-48f2-b289-379707934e2f",
          "description": "Utilisation report identifier of APCS (\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440 \u043E\u0442\u0447\u0451\u0442\u0430 \u043E \u043D\u0430\u043D\u0435\u0441\u0435\u043D\u0438\u0438 \u0410\u0421\u0423\u0422\u041F)"
        },
        "usageType": {
          "type": "string",
          "example": "VERIFIED",
          "description": "Usage type (\u0422\u0438\u043F \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F)",
          "enum": [
            "USED_FOR_PRODUCTION",
            "SENT_TO_PRINTER",
            "PRINTED",
            "PRINTER_LOST",
            "VERIFIED"
          ]
        }
      },
      "title": "UtilisationReportDtoWaterKZ"
    }
  }
}